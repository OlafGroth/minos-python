name: "Test: minos-discovery-kong"

on:
  push:
    branches:
      - main
      - '*.*.x'
  pull_request:
    paths:
      - 'packages/plugins/minos-discovery-kong/**'
      - 'packages/core/minos-microservice-networks/**'
      - 'packages/core/minos-microservice-common/**'

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.9-buster
    defaults:
      run:
        working-directory: packages/plugins/minos-discovery-kong

    services:
        kong-migrations:
            image: kong/kong-gateway:2.8.0.0-alpine
            command: kong migrations bootstrap
            depends_on:
                - db
            environment:
                KONG_DATABASE: postgres
                KONG_PG_DATABASE: kong
                KONG_PG_HOST: db
                KONG_PG_USER: kong
                KONG_PG_PASSWORD: kong
            restart: on-failure

        kong-migrations-up:
            image: kong/kong-gateway:2.8.0.0-alpine
            command: kong migrations up && kong migrations finish
            depends_on:
                - db
            environment:
                KONG_DATABASE: postgres
                KONG_PG_DATABASE: kong
                KONG_PG_HOST: db
                KONG_PG_USER: kong
                KONG_PG_PASSWORD: kong
            restart: on-failure

        kong:
            image: kong/kong-gateway:2.8.0.0-alpine
            user: kong
            environment:
                KONG_DATABASE: postgres
                KONG_PG_DATABASE: kong
                KONG_PG_HOST: db
                KONG_PG_USER: kong
                KONG_PG_PASSWORD: kong
                KONG_ADMIN_ACCESS_LOG: /dev/stdout
                KONG_ADMIN_ERROR_LOG: /dev/stderr
                KONG_PROXY_LISTEN: 0.0.0.0:8000
                KONG_ADMIN_LISTEN: 0.0.0.0:8001
                KONG_PROXY_ACCESS_LOG: /dev/stdout
                KONG_PROXY_ERROR_LOG: /dev/stderr
                KONG_PREFIX: /var/run/kong
                KONG_LOG_LEVEL: debug
                KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
            ports:
                - "0.0.0.0:8000:8000/tcp"
                - "0.0.0.0:8443:8443/tcp"
                - "127.0.0.1:8001:8001/tcp"
                - "127.0.0.1:8444:8444/tcp"
            healthcheck:
                test: [ "CMD", "kong", "health" ]
                interval: 10s
                timeout: 10s
                retries: 10
            restart: on-failure:5
            read_only: true
            security_opt:
                - no-new-privileges

        db:
            image: postgres:9.5
            environment:
                POSTGRES_DB: kong
                POSTGRES_USER: kong
                POSTGRES_PASSWORD: kong
            healthcheck:
                test: [ "CMD", "pg_isready", "-U", "kong" ]
                interval: 30s
                timeout: 30s
                retries: 3
            restart: on-failure
            stdin_open: true
            tty: true

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: make install

      - name: Lint package
        run: make lint

      - name: Test package with coverage
        run: make coverage

      - name: Publish coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./packages/plugins/minos-discovery-kong/coverage.xml
          fail_ci_if_error: true

      - name: Generate documentation
        run: make docs

      - name: Generate build
        run: make dist
